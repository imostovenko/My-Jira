<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1469009789001">{:repl-history {:ide [], :local [&quot;@(d/transact conn\n   '[{:db/id #db/id[:db.part/user] \n      :user/login \&quot;alena\&quot;\n      :user/pass \&quot;123\&quot;\n      :user/isAdmin false}])&quot; &quot;(map #(d/pull db '[*] %)\n  (d/q '[:find [?e ...]\n         :in $\n         :where [?e :user/login]]\n    db))&quot; &quot;@(d/transact conn\n   '[{:db/id #db/id[:db.part/user] \n      :user/login \&quot;kate\&quot;\n      :user/pass \&quot;123\&quot;\n      :user/isAdmin false}])&quot; &quot;(map #(d/pull @(db) '[*] %)\n  (d/q '[:find [?e ...]\n         :in $\n         :where [?e :user/login]]\n    @(db)))&quot; &quot;@(d/transact conn\n   '[{:db/id #db/id[:db.part/user] \n      :user/login \&quot;test-user\&quot;\n      :user/pass \&quot;123\&quot;\n      :user/isAdmin false}])&quot; &quot;@(d/transact conn\n   '[[:db/retract \&quot;kate\&quot;]])&quot; &quot;@(d/transact conn\n   '[:db/retract \&quot;kate\&quot;])&quot; &quot;@(d/transact conn\n   '[[:db.fn/retractEntity 17592186045445]])&quot; &quot;@(d/transact conn\n   '[[:db.fn/retractEntity 17592186045447]])&quot; &quot;(map #(d/pull (db) '[*] %)\n  (d/q '[:find [?e ...]\n         :in $\n         :where [?e :user/login]]\n    (db)))&quot; &quot;(delete-user 17592186045451)&quot; &quot;(merge {:a 1 :b 2} {:a 4})&quot; &quot;(add-user \&quot;test-u\&quot; \&quot;123\&quot;)&quot; &quot;(add-user \&quot;test-u\&quot; \&quot;1234\&quot;)&quot; &quot;(delete-user 17592186045457)&quot; &quot;(delete-user 17592186045443)&quot; &quot;(delete-user 17592186045441)&quot; &quot;(get-users-ids)&quot; &quot;(delete-user 17592186045436)&quot; &quot;(add-user \&quot;test\&quot; \&quot;123\&quot;)&quot; &quot;(add-user \&quot;test\&quot; \&quot;1234\&quot;)&quot; &quot;(delete-user 17592186045463)&quot; &quot;(jira.projects.db/selected-p)&quot; &quot;jira.projects.db/selected-p&quot; &quot;@jira.projects.db/selected-p&quot; &quot;@selected-p&quot; &quot;selected-p&quot; &quot;(in-ns 'jira.datomic)&quot; &quot;(create-prj \&quot;one\&quot; \&quot;one descr\&quot;)&quot; &quot;(create-prj \&quot;two\&quot; \&quot;two descr\&quot;)&quot; &quot;(get-projects-deep)&quot; &quot;(get-projects-ids)&quot; &quot;(get-users-deep)&quot; &quot;(db)&quot; &quot;(datomic.api/connect \&quot;datomic:free://localhost:4334/jira\&quot;)&quot; &quot;(in-ns 'jira.dat)&quot; &quot;uri&quot; &quot;conn&quot; &quot;(in-ns 'jira.server)&quot; &quot;url&quot; &quot;(+ 2 3)&quot; &quot;(in-ns 'jira.admin.db)&quot; &quot;(set-admin! \&quot;ira\&quot;)&quot; &quot;lang&quot; &quot;(set-lang! :gh)&quot; &quot;(set-lang! :RU)&quot; &quot;(= :EN @lang)&quot; &quot;(def l {:EN \&quot;en\&quot; :UA \&quot;ua\&quot;})&quot; &quot;l&quot; &quot;(keys l)&quot; &quot;(values l)&quot; &quot;(vals l)&quot; &quot;(l :EN)&quot; &quot;(:EN l)&quot; &quot;(in-ns 'jira-text)&quot; &quot;(def k {wew})&quot; &quot;(def k 2)&quot; &quot;(def k {wew rer})&quot; &quot;(def k {:wew \&quot;rer\&quot;})&quot; &quot;k &quot; &quot;t &quot; &quot;te &quot; &quot;te&quot; &quot;pppp&quot; &quot;t&quot; &quot;(:EN :hello t)&quot; &quot;(:EN (:hello t))&quot; &quot;(@jira.components/lang (:hello t))&quot; &quot;(in-ns 'jira.components)&quot; &quot;(t :hello)&quot; &quot;(reset! lang :3r)&quot; &quot;@jira.users.db&quot; &quot;(if-let 2 3)&quot; &quot;(or 2 3)&quot; &quot;(or nil 3)&quot; &quot;(in-ns 'jira.text)&quot; &quot;@lang&quot; &quot;(set-lang! :EN)&quot; &quot;(:UA (:Actions copies))&quot; &quot;(if-not (empty? (:UA (:Actions copies))) (:EN (:Actions copies)))&quot; &quot;(empty? (:UA (:Actions copies)))&quot; &quot;(if-let (not (empty? (:UA (:Actions copies))) (:EN (:Actions copies))))&quot; &quot;(str (tt/t :subject) \&quot;: \&quot;)&quot; &quot;(str (t :subject) \&quot;: \&quot;)&quot; &quot;(status)&quot; &quot;@projects &quot; &quot;(add-u-to-p! 2 \&quot;ira\&quot;)&quot; &quot;(in-ns 'jira.tickets.db)&quot; &quot;(reassign-t! 1 \&quot;test-user\&quot;)&quot; &quot;@tickets&quot; &quot;(get-t 5)&quot; &quot;(:project (get-t 5))&quot; &quot;(in-ns 'jira.projects.db)&quot; &quot;(add-u-to-p! 3 \&quot;ira\&quot;)&quot; &quot;(u-exists? \&quot;ira\&quot;)&quot; &quot;(in-ns 'jira.db)&quot; &quot;(init-db)&quot; &quot;(init-db db)&quot; &quot;(in-ns 'jira.users.db)&quot; &quot;@users&quot; &quot;(delete-u! 1)&quot;], :remote []}}</component>
</project>